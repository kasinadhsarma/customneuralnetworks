name: CI

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libomp-dev

    - name: Configure CMake
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Clang Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy cppcheck

    - name: Run Clang-Tidy
      run: |
        find ${{github.workspace}}/src -name '*.cpp' -exec clang-tidy {} -checks=*,-llvm-header-guard \;
        find ${{github.workspace}}/include -name '*.hpp' -exec clang-tidy {} -checks=*,-llvm-header-guard \;

    - name: Run Cppcheck
      run: |
        cppcheck --enable=all --suppress=missingInclude --error-exitcode=1 ${{github.workspace}}/src ${{github.workspace}}/include

  code-coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov

    - name: Configure CMake with Coverage
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Run Tests with Coverage
      working-directory: ${{github.workspace}}/build
      run: |
        ctest --output-on-failure
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ${{github.workspace}}/build/coverage.info
