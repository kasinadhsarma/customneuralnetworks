name: Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ libomp-dev lcov

    - name: Clean build directory
      run: rm -rf build

    - name: Configure CMake with Coverage
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Debug \
          -DENABLE_COVERAGE=ON \
          -DCMAKE_CXX_FLAGS="--coverage -fprofile-arcs -ftest-coverage -fPIC"

    - name: Build
      working-directory: build
      run: |
        cmake --build . --config Debug -j$(nproc)

    - name: Run tests with coverage
      working-directory: build
      run: |
        # Run the tests and generate coverage data
        ctest --output-on-failure
        
        # Capture coverage data
        lcov --capture --directory . --output-file coverage.info --rc lcov_branch_coverage=1
        
        # Filter out system files and test files
        lcov --remove coverage.info '/usr/*' '*/tests/*' '*/build/*' '*/googletest/*' '*/benchmark/*' --output-file filtered_coverage.info --rc lcov_branch_coverage=1
        
        # Generate report
        genhtml filtered_coverage.info --output-directory coverage_report --rc lcov_branch_coverage=1 --legend
        
        # Show coverage stats
        lcov --list filtered_coverage.info --rc lcov_branch_coverage=1

    - name: Generate coverage report
      working-directory: build
      run: |
        genhtml coverage.info --output-directory coverage_report

    - name: Configure Pages
      uses: actions/configure-pages@v4

    - name: Upload coverage results
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'build/coverage_report'

    - name: Deploy coverage report
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./build/filtered_coverage.info
        fail_ci_if_error: true
        verbose: true
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
